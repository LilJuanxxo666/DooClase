package co.edu.uco.publiuco.business.assembler.concrete;

import co.edu.uco.publiuco.business.assembler.Assembler;
import co.edu.uco.publiuco.business.domain.EstadoTipoAccesoDomain;
import co.edu.uco.publiuco.dto.EstadoTipoAccesoDTO;
import co.edu.uco.publiuco.dto.EstadoTipoRelacionInstitucionDTO;
import co.edu.uco.publiuco.entities.EstadoTipoAccesoEntity;

public final class EstadoTipoAccesoAssembler
		implements Assembler<EstadoTipoAccesoDomain, EstadoTipoAccesoDTO, EstadoTipoAccesoEntity> {
	
	private static final Assembler<EstadoTipoAccesoDomain, EstadoTipoAccesoDTO, EstadoTipoAccesoEntity> INSTANCE = new EstadoTipoAccesoAssembler();

	private EstadoTipoAccesoAssembler() {
		super();
	}

	public static Assembler<EstadoTipoAccesoDomain, EstadoTipoAccesoDTO, EstadoTipoAccesoEntity> getInstance() {
		return INSTANCE;
	}

	@Override
	public EstadoTipoAccesoDTO toDtoFromDomain(final EstadoTipoAccesoDomain domain) {
		return EstadoTipoAccesoDTO.create().setIdentificador(domain.getIdentificador()).setNombre(domain.getNombre()).
				setDescripcion(domain.getDescripcion());
	}

	@Override
	public EstadoTipoAccesoDomain toDomainFromDto(final EstadoTipoAccesoDTO dto) {
		return new EstadoTipoAccesoDomain(dto.getIdentificador(), dto.getNombre(), dto.getDescripcion());
	}

	@Override
	public EstadoTipoAccesoEntity toEntityFromDomain(final EstadoTipoAccesoDomain domain) {
		return new EstadoTipoAccesoEntity(domain.getIdentificador(), domain.getNombre(), domain.getDescripcion());
	}

	@Override
	public EstadoTipoAccesoDomain toDomainFromEntity(final EstadoTipoAccesoEntity entity) {
		return new EstadoTipoAccesoDomain(entity.getIdentificador(), entity.getNombre(), entity.getDescripcion());
	}
}
