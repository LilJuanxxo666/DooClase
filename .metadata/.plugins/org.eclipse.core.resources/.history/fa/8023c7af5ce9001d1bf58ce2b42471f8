package co.edu.uco.publiuco.crosscutting.utils;

import java.sql.Connection;
import java.sql.SQLException;

import co.edu.uco.publiuco.crosscutting.exception.PubliUcoCrossCuttingException;

public final class UtilSql {

	private UtilSql() {
		super();
	}

	public static boolean connectionIsOpen(final Connection connection) {
		if (UtilObject.isNull(connection)) {
			throw PubliUcoCrossCuttingException.create("No es posible validar si una conexi√≥n esta abierta"
					+ " cuando se encuentra nula...");
		}
		try {
			return !connection.isClosed();
		} catch (final SQLException exception) {
			var userMessage = "Se ha presentado un problema tratando de validar si una conexion estaba o no activa";
			var technicalMessage = "Se ha presentado una exception de tipo SqlException, tratando de validar "
					+ "si la conexion estaba o no abierta. Porfavor valide la traza de errores completa de la exception presentada...";
			
			throw PubliUcoCrossCuttingException.create(userMessage, technicalMessage, exception);
		}catch (final Exception exception) {
			var userMessage = "Se ha presentado un problema tratando de validar si una conexion estaba o no activa";
			var technicalMessage = "Se ha presentado una exception inesperada de tipo Exception, tratando de validar "
					+ "si la conexion estaba o no abierta. Porfavor valide la traza de errores completa de la exception presentada...";
			
			throw PubliUcoCrossCuttingException.create(userMessage, technicalMessage, exception);
		}
	}
}
